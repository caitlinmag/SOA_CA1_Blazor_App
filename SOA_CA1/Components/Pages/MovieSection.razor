@page "/MovieSection"
@inject MovieService MovieService
@inject BookService BookService

<PageTitle>Movies</PageTitle>
<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Kapakana:wght@300..400&family=Pinyon+Script&display=swap" rel="stylesheet">
</head>

<div class="title text-center">
<h1>Movie Section</h1>
</div>

<div class="movie-container">
<div class="movie-input-section text-center">
    <h2>Find Movies</h2>
<input type="text" @bind="userMovieInput" placeholder="Enter Movie Title..."/>
<button @onclick="SubmitUserInput">Submit</button>

        @if (movie != null)
        {
          <p>Movie has been found with title: @userMovieInput!</p>
            <div class="movie-card">
                <h3>@movie.Title</h3>
                <p><strong>IMDB ID:</strong>@movie.imdbID</p>
                <p><strong>Year:</strong> @movie.Year</p>
                <p><strong>Director:</strong> @movie.Director</p>
                <p><strong>Genre:</strong> @movie.Genre</p>
                <p><strong>Plot:</strong> @movie.Plot</p>
            </div>
        }
        else
        {
            <p>No movies available</p>
        }
    </div>

<div> 

</div>
    <div class="books-section text-center">
    <h2>Find Books</h2>
    <button @onclick="ViewBooks">View</button>
        @if (bookResult != null)
        {
            <p>Book has been found with title: @bookResult.q!</p>
            <p>Number of books found: @bookResult.numFound</p>
            <ul>
            @foreach (var book in books)
            {
                <h3>@book.Title</h3>
                <li>@book.Author</li>
                <li>@book.Year</li>
            }
            </ul>
        }
        else
        {
            <p>No books available</p>
        }
</div>  
</div>
@code {
    private string userMovieInput = string.Empty;
    public Movies? movie;

    private Rootobject? bookResult;
    private List<Books> books = new();

    async Task SubmitUserInput()
    {
        if (!string.IsNullOrWhiteSpace(userMovieInput))
        {
            movie = await MovieService.GetMovieAPI(userMovieInput);
        }
    }

    async Task ViewBooks()
    {
        if(movie != null && !string.IsNullOrWhiteSpace(movie.Title))
        {
            bookResult = await BookService.GetBooksAPI(movie.Title);
        }
    }
}

   

